package com.lzz.tranning;

import java.util.Scanner;

/**
 * 对于任意两个正整数x和k,我们定义repeat(x, k)为将x重复写k次形成的数,
 * 例如repeat(1234, 3) = 123412341234,repeat(20,2) = 2020.
 * 牛牛现在给出4个整数x1, k1, x2, k2, 其中v1 = (x1, k1), v2 = (x2, k2),请你来比较v1和v2的大小。 
 * @author CunsiALIEN
 *
 * 输入描述:
 *    输入包括一行,一行中有4个正整数x1, k1, x2, k2(1 ≤ x1,x2 ≤ 10^9, 1 ≤ k1,k2 ≤ 50),以空格分割
 * 输出描述:
 *    如果v1小于v2输出"Less",v1等于v2输出"Equal",v1大于v2输出"Greater".
 */
public class CompareByRepeat {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int x1 = sc.nextInt();
		int k1 = sc.nextInt();
		int x2 = sc.nextInt();
		int k2 = sc.nextInt();
		String v1 = repeat(x1,k1);
		String v2 = repeat(x2,k2);
		
		String result = compareByRepeat_Solution(v1,v2);
		System.out.println(result);
		sc.close();
	}
	
	public static String compareByRepeat_Solution(String v1, String v2) {
		/**
		 * 大数通过转化为字符串进行比较
		 * 先比较字符串长度，如果长度相同再使用compareTo比较
		 */
		if(v1.length() > v2.length()) {
			return "Greater";
		}
		else if(v1.length() < v2.length()) {
			return "Less";
		}
		else {
			if(v1.compareTo(v2) > 0) {
				return "Greater";
			}
			else if(v1.compareTo(v2) < 0) {
				return "Less";
			}
			else {
				return "Equal";
			}
		}
	}
	
	public static String repeat(int x, int k) {
		String str = "";
		for(int i = 0 ; i < k ; i++) {
			str += x;
		}
		return str;
	}
	
	
}
